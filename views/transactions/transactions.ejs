<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Transactions - FinTrack</title>
    <link href="/css/output.css" rel="stylesheet" />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
      <div class="max-w-7xl mx-auto px-4">
        <div class="flex justify-between items-center py-4">
          <div class="flex items-center">
            <h1 class="text-2xl font-bold text-blue-600">FinTrack</h1>
          </div>
          <div class="flex items-center space-x-4">
            <span class="text-gray-700">Welcome, <%= user.username %></span>
            <a href="/user/profile" class="text-blue-600 hover:text-blue-800">
              <i class="fas fa-user-circle text-xl"></i>
            </a>
            <a
              href="/auth/logout"
              class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg"
            >
              <i class="fas fa-sign-out-alt mr-2"></i>Logout
            </a>
          </div>
        </div>
      </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 py-8">
      <!-- Header -->
      <div class="flex justify-between items-center mb-8">
        <div>
          <h2 class="text-3xl font-bold text-gray-800">Transactions</h2>
          <p class="text-gray-600 mt-2">Manage your income and expenses</p>
        </div>
        <a
          href="/transactions/add"
          class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg shadow-lg transition duration-200 flex items-center"
        >
          <i class="fas fa-plus mr-2"></i>Add Transaction
        </a>
      </div>

      <!-- Filter Section -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">
          Filter Transactions
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Type</label
            >
            <select
              id="typeFilter"
              class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Types</option>
              <option value="income">Income</option>
              <option value="expense">Expense</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Category</label
            >
            <select
              id="categoryFilter"
              class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Categories</option>
              <option value="food">Food</option>
              <option value="transportation">Transportation</option>
              <option value="entertainment">Entertainment</option>
              <option value="utilities">Utilities</option>
              <option value="healthcare">Healthcare</option>
              <option value="salary">Salary</option>
              <option value="freelance">Freelance</option>
              <option value="other">Other</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >From Date</label
            >
            <input
              type="date"
              id="fromDate"
              class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >To Date</label
            >
            <input
              type="date"
              id="toDate"
              class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>
        </div>
      </div>

      <!-- Summary Cards -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <div class="bg-green-50 border-l-4 border-green-400 p-6 rounded-lg">
          <div class="flex items-center">
            <i class="fas fa-arrow-up text-green-500 text-2xl mr-3"></i>
            <div>
              <p class="text-green-600 font-medium">Total Income</p>
              <p class="text-2xl font-bold text-green-700" id="totalIncome">
                $0.00
              </p>
            </div>
          </div>
        </div>
        <div class="bg-red-50 border-l-4 border-red-400 p-6 rounded-lg">
          <div class="flex items-center">
            <i class="fas fa-arrow-down text-red-500 text-2xl mr-3"></i>
            <div>
              <p class="text-red-600 font-medium">Total Expenses</p>
              <p class="text-2xl font-bold text-red-700" id="totalExpenses">
                $0.00
              </p>
            </div>
          </div>
        </div>
        <div class="bg-blue-50 border-l-4 border-blue-400 p-6 rounded-lg">
          <div class="flex items-center">
            <i class="fas fa-wallet text-blue-500 text-2xl mr-3"></i>
            <div>
              <p class="text-blue-600 font-medium">Net Balance</p>
              <p class="text-2xl font-bold text-blue-700" id="netBalance">
                $0.00
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Transactions Table -->
      <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-semibold text-gray-800">
            Recent Transactions
          </h3>
        </div>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Date
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Description
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Category
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Type
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Amount
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Actions
                </th>
              </tr>
            </thead>
            <tbody
              class="bg-white divide-y divide-gray-200"
              id="transactionsTableBody"
            >
              <!-- Transactions will be loaded here -->
            </tbody>
          </table>
        </div>
      </div>

      <!-- Empty State -->
      <div id="emptyState" class="text-center py-12 hidden">
        <i class="fas fa-receipt text-gray-400 text-6xl mb-4"></i>
        <h3 class="text-xl font-semibold text-gray-600 mb-2">
          No transactions found
        </h3>
        <p class="text-gray-500 mb-6">
          Start by adding your first transaction to track your finances.
        </p>
        <a
          href="/transactions/add"
          class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg inline-flex items-center"
        >
          <i class="fas fa-plus mr-2"></i>Add Your First Transaction
        </a>
      </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div
      id="deleteModal"
      class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center z-50"
    >
      <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
        <div class="flex items-center mb-4">
          <i class="fas fa-exclamation-triangle text-red-500 text-xl mr-3"></i>
          <h3 class="text-lg font-semibold text-gray-800">Confirm Deletion</h3>
        </div>
        <p class="text-gray-600 mb-6">
          Are you sure you want to delete this transaction? This action cannot
          be undone.
        </p>
        <div class="flex justify-end space-x-3">
          <button
            id="cancelDelete"
            class="px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50"
          >
            Cancel
          </button>
          <button
            id="confirmDelete"
            class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg"
          >
            Delete
          </button>
        </div>
      </div>
    </div>

    <script>
      let transactions = [];
      let transactionToDelete = null;

      // Load transactions on page load
      document.addEventListener("DOMContentLoaded", function () {
        loadTransactions();
        setupEventListeners();
      });

      // Setup event listeners
      function setupEventListeners() {
        // Filter event listeners
        document
          .getElementById("typeFilter")
          .addEventListener("change", filterTransactions);
        document
          .getElementById("categoryFilter")
          .addEventListener("change", filterTransactions);
        document
          .getElementById("fromDate")
          .addEventListener("change", filterTransactions);
        document
          .getElementById("toDate")
          .addEventListener("change", filterTransactions);

        // Modal event listeners
        document
          .getElementById("cancelDelete")
          .addEventListener("click", closeDeleteModal);
        document
          .getElementById("confirmDelete")
          .addEventListener("click", deleteTransaction);
      }

      // Load transactions from API
      async function loadTransactions() {
        try {
          const response = await fetch("/transactions/api");
          if (response.ok) {
            transactions = await response.json();
            displayTransactions(transactions);
            updateSummary(transactions);
          } else {
            console.error("Failed to load transactions");
          }
        } catch (error) {
          console.error("Error loading transactions:", error);
        }
      }

      // Display transactions in table
      function displayTransactions(transactionList) {
        const tbody = document.getElementById("transactionsTableBody");
        const emptyState = document.getElementById("emptyState");

        if (transactionList.length === 0) {
          tbody.innerHTML = "";
          emptyState.classList.remove("hidden");
          return;
        }

        emptyState.classList.add("hidden");
        tbody.innerHTML = transactionList
          .map(
            (transaction) => `
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${new Date(
                          transaction.date || transaction.createdAt
                        ).toLocaleDateString()}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${transaction.description || "No description"}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        <span class="px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 rounded-full">
                            ${transaction.category || "Other"}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <span class="px-2 py-1 text-xs font-medium rounded-full ${
                          transaction.type === "income"
                            ? "bg-green-100 text-green-800"
                            : "bg-red-100 text-red-800"
                        }">
                            ${transaction.type || "expense"}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium ${
                      transaction.type === "income"
                        ? "text-green-600"
                        : "text-red-600"
                    }">
                        ${transaction.type === "income" ? "+" : "-"}$${Math.abs(
              transaction.amount || 0
            ).toFixed(2)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <div class="flex space-x-2">
                            <a href="/transactions/edit/${
                              transaction.id
                            }" class="text-blue-600 hover:text-blue-900">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button onclick="showDeleteModal(${
                              transaction.id
                            })" class="text-red-600 hover:text-red-900">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `
          )
          .join("");
      }

      // Filter transactions
      function filterTransactions() {
        const typeFilter = document.getElementById("typeFilter").value;
        const categoryFilter = document.getElementById("categoryFilter").value;
        const fromDate = document.getElementById("fromDate").value;
        const toDate = document.getElementById("toDate").value;

        let filtered = transactions.filter((transaction) => {
          if (typeFilter && transaction.type !== typeFilter) return false;
          if (categoryFilter && transaction.category !== categoryFilter)
            return false;

          const transactionDate = new Date(
            transaction.date || transaction.createdAt
          );
          if (fromDate && transactionDate < new Date(fromDate)) return false;
          if (toDate && transactionDate > new Date(toDate)) return false;

          return true;
        });

        displayTransactions(filtered);
        updateSummary(filtered);
      }

      // Update summary cards
      function updateSummary(transactionList) {
        const income = transactionList
          .filter((t) => t.type === "income")
          .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);

        const expenses = transactionList
          .filter((t) => t.type === "expense")
          .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);

        const netBalance = income - expenses;

        document.getElementById("totalIncome").textContent = `$${income.toFixed(
          2
        )}`;
        document.getElementById(
          "totalExpenses"
        ).textContent = `$${expenses.toFixed(2)}`;
        document.getElementById(
          "netBalance"
        ).textContent = `$${netBalance.toFixed(2)}`;
        document.getElementById("netBalance").className = `text-2xl font-bold ${
          netBalance >= 0 ? "text-green-700" : "text-red-700"
        }`;
      }

      // Show delete confirmation modal
      function showDeleteModal(transactionId) {
        transactionToDelete = transactionId;
        document.getElementById("deleteModal").classList.remove("hidden");
        document.getElementById("deleteModal").classList.add("flex");
      }

      // Close delete modal
      function closeDeleteModal() {
        transactionToDelete = null;
        document.getElementById("deleteModal").classList.add("hidden");
        document.getElementById("deleteModal").classList.remove("flex");
      }

      // Delete transaction
      async function deleteTransaction() {
        if (!transactionToDelete) return;

        try {
          const response = await fetch(
            `/transactions/delete/${transactionToDelete}`,
            {
              method: "POST",
            }
          );

          if (response.ok) {
            closeDeleteModal();
            loadTransactions(); // Reload transactions
          } else {
            console.error("Failed to delete transaction");
            alert("Failed to delete transaction. Please try again.");
          }
        } catch (error) {
          console.error("Error deleting transaction:", error);
          alert("An error occurred while deleting the transaction.");
        }
      }
    </script>
  </body>
</html>
